import React, { ReactElement, useState } from 'react'
import Head from 'next/head'
import { useForm } from "react-hook-form"

import {default as VerifyLogo} from "../../media/logos/Verify.svg"
import {default as GraphLogo} from "../../media/logos/Graph.svg"
import {default as PaperUploadLogo} from "../../media/logos/PaperUpload.svg"

import styles from "../../styles/pages/profile.module.scss"
import Layout from '../../components/layouts/ServiceLayout/ServiceLayout'
import Input from 'src/components/UI/Input/Input'
import { Box, Flex, Radio, RadioGroup, Stack} from '@chakra-ui/react'
import rules from 'src/react-hook-form/rules'

import TileBlock from 'src/components/TileBlock/TileBlock'
import Button from 'src/components/UI/Button/Button'
import Helper, { mockProfile } from 'src/features/Navigation/Navigation'
import FormSegment from 'src/features/Profile/FormSegment'
import { useRouter } from 'next/router'
import { useSetDataMutation } from 'src/app/redux/services/dataApi'
import { useDispatch } from 'react-redux'
import { setData } from 'src/app/redux/slices/dataSlice'
import { setData as setDataHelper } from 'src/app/redux/slices/helperSlice'
import { useAppDispatch, useAppSelector } from 'src/app/redux/store'
import { AnimatePresence, motion } from 'framer-motion'
import { fading } from 'utils/animation'

export default function UIPage() {
  const router = useRouter()
  const [activePage, setactivePage] = useState("Основные данные")
  const {control, setValue} = useForm({
    mode: "all",
  })

  const data = useAppSelector(state => state.user.data)

  React.useEffect(() => {
    Object.entries(data).forEach((v) => {
      setValue(v[0], v[1])
    })
  }, [data])

  const dispatch = useDispatch()

  return (
    <>
      <Head>
        <title>Профиль | Молодежный бит</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.wrapper}>
        <TileBlock style={{gridRow: "1", gridColumn: "1/3"}}>
          <div className={styles.userInfoBlock}>
            <div className={styles.img}>
              <img src="/Avatar.png" alt="" />
            </div>
            <div className={styles.info}>
              <Flex className={styles.name} gap=".3rem" alignItems="center">
                <h1>Незборецкий Кирилл</h1>
                <VerifyLogo/>
              </Flex>
              <Flex className={styles.idData} gap=".5rem" alignItems="center">
                <span>ID #343435</span>
                <span>nezbkir@gmail.com</span>
              </Flex>
              <Flex className={styles.idData} gap=".3rem" alignItems="center">
                <Button onClick={() => router.push("/profile/order/new")}>
                  Заявка на грант
                </Button>
                {/* <Button disabled onClick={() => dispatch(setDataHelper({text: "Чтобы подать заявку на грант, необходимо заполнить профиль на 100%. Осталось заполнить разделы: Основные данные, Личные документы, Образование"}))}>
                  Заявка на грант
                </Button> */}
              </Flex>
            </div>
            <TileBlock style={{width: "100%", maxWidth: "30em"}}>
              <div className={styles.choosing}>
                <div className={styles.chItem}>
                  <span>Мои проекты</span>
                  <div className={styles.icon}>
                    <GraphLogo/>
                  </div>
                </div>
                <div className={styles.chItem} onClick={() => router.push("/profile/order")}>
                  <span>Заявки</span>
                  <div className={styles.icon}>
                    <PaperUploadLogo/>
                  </div>
                </div>
              </div>
            </TileBlock>
          </div>
        </TileBlock>
        <div className={styles.form}>
        <AnimatePresence mode='wait'>
          {activePage == "Основные данные" && (
            <MainDataPage control={control}/>
          )}

          {activePage == "Личные документы" && (
            <PrivateDataPage control={control}/>
          )}

          {activePage == "Образование" && (
            <EducationPage control={control}/>
          )}  

          {activePage == "Соцсети" && (
            <SocialNetPage control={control}/>
          )} 

        </AnimatePresence>
        </div>
        <TileBlock style={{gridColumn: "1", gridRow: "2", height: "min-content"}}>
          <Helper onClick={(v) => setactivePage(v)} items={mockProfile.items} title={mockProfile.title} active={activePage}/>
        </TileBlock>
      </div>
    </>
  )
}

UIPage.getLayout = function getLayout(page: ReactElement) {
  return (
    <Layout>
      {page}
    </Layout>
  )
}

const MainDataPage = (props: {control: any}) => {
  const dispatch = useAppDispatch()
  return (
    <>
      <FormSegment title='Основные данные'>
        <Input
        rules={{
          ...rules.required,
        }}
        name='second_name'
        control={props.control}
        label='Фамилия'
        type='text'/>

        <Input
        rules={{
          ...rules.required,
          ...rules.validateDate
        }}
        name='date'
        control={props.control}
        label='Дата рождения'
        type='date'/>

        <Input
        rules={{
          ...rules.required,
        }}
        name='first_name'
        control={props.control}
        label='Имя'
        type='text'/>

        <Input
        name='phone'
        control={props.control}
        label='Номер телефона'
        type='phone'/>

        <Input
        name='middle_name'
        control={props.control}
        description="При наличии"
        label='Отчество'
        type='text'/>
        <Flex flexDir="column" gap="1rem">
          <span style={{fontSize: ".9rem"}}>Пол</span>
          <RadioGroup onChange={(v) => dispatch(setData({['gender']: v}))}>
            <Flex gap="1rem" direction='row'>
              <Radio value='М' size='md'>
                Женский
              </Radio>
              <Radio value='Ж' size='md'>
                Мужской
              </Radio>
            </Flex>
          </RadioGroup>
        </Flex>

      </FormSegment>

      <FormSegment title='Адрес'>
        <Input
        name='address'
        control={props.control}
        description="Начинайте вводить"
        label='Адрес'
        type='address'/>
      </FormSegment>

      <FormSegment title='Дополнительно'>
        <Input
        name='clothing_size'
        control={props.control}
        label='Размер одежды'
        type='text'/>
        <Input
        name='nationality'
        control={props.control}
        label='Национальность'
        type='text'/>
        <Input
        name='shoe_size'
        control={props.control}
        label='Размер обуви'
        description='Размер в формате EU'
        type='text'/>
        <Input
        name='shoe_size'
        control={props.control}
        label='Доверенное лицо'
        description='Введите ФИО доверенного лица'
        type='text'/>
      </FormSegment>
    </>
  )
}

const PrivateDataPage = (props: {control: any}) => {
  const dispatch = useAppDispatch()
  return (
    <>
      <FormSegment title='Паспорт'>
        <Input
        rules={{
          ...rules.required
        }}
        name='passport_number'
        control={props.control}
        description="Без пробела"
        label='Серия и номер'
        type='number'/>
        <Input
         rules={{
          ...rules.required
        }}
        name='passport_giveout_date'
        control={props.control}
        label='Дата выдачи'
        type='date'/>
        <Input
        rules={{
          ...rules.required
        }}
        name='passport_giveout'
        control={props.control}
        label='Выдан'
        type='text'/>
        <Input
        rules={{
          ...rules.required
        }}
        name='passport_giveout'
        control={props.control}
        description="6 цифр без пробела"
        label='Код подразделения'
        type='text'/>
      </FormSegment>

      <FormSegment title='Документы'>
        <Input
        name='inn'
        control={props.control}
        description="Введите номер ИНН"
        label='ИНН'
        type='snils'/>
        <Input
        name='snils'
        rules={{
          ...rules.required
        }}
        control={props.control}
        description="Введите номер СНИЛС"
        label='СНИЛС'
        type='snils'/>
      </FormSegment>
    </>
  )
}

const EducationPage = (props: {control: any}) => {
  const dispatch = useAppDispatch()
  return (
    <>
      <FormSegment title='Образование'>
        <Input
        rules={{
          ...rules.required
        }}
        name='university_name'
        control={props.control}
        label='Название университета'
        type='text'/>
        <Input
        rules={{
          ...rules.required
        }}
        name='university_start_date'
        control={props.control}
        label='Год поступления'
        type='number'/>
        <Input
        rules={{
          ...rules.required
        }}
        name='university_end_date'
        control={props.control}
        label='Год окончания обучения'
        type='number'/>
      </FormSegment>
    </>
  )
}

const SocialNetPage = (props: {control: any}) => {
  const dispatch = useAppDispatch()
  return (
    <>
      <FormSegment title='Социальные сети'>
        <Input
        name='vk_link'
        control={props.control}
        label='VK'
        description='Ссылка'
        type='text'/>
        <Input
        name='telegram'
        control={props.control}
        label='Telegram'
        description='Никнейм'
        type='text'/>
        <Input
        name='email'
        control={props.control}
        label='Почта'
        type='text'/>
      </FormSegment>
    </>
  )
}