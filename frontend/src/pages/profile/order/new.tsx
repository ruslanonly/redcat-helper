import React, { ReactElement, useState } from 'react'
import Head from 'next/head'
import { useForm } from "react-hook-form"

import {default as VerifyLogo} from "../../../media/logos/Verify.svg"
import {default as GraphLogo} from "../../../media/logos/Graph.svg"
import {default as PaperUploadLogo} from "../../../media/logos/PaperUpload.svg"

import styles from "../../../styles/pages/profile.module.scss"
import Layout from '../../../components/layouts/ServiceLayout/ServiceLayout'
import Input from 'src/components/UI/Input/Input'
import { Box, Checkbox, Flex, Radio, RadioGroup, Stack} from '@chakra-ui/react'
import rules from 'src/react-hook-form/rules'

import TileBlock from 'src/components/TileBlock/TileBlock'
import Button from 'src/components/UI/Button/Button'
import Helper, { mockNewOrder } from 'src/features/Navigation/Navigation'
import FormSegment from 'src/features/Profile/FormSegment'
import OrderSegment from 'src/features/Profile/OrderSegment'
import HelperMessage from 'src/components/HelperMessage/HelperMessage'

export default function OrderPage() {
  const [activePage, setactivePage] = useState("Основные данные")
  const {control, watch} = useForm({
    mode: "all"
  })
  console.log('active page', activePage)
  return (
    <>
      <Head>
        <title>Профиль | Молодежный бит</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.wrapper}>
        <div className={styles.form}>
          {activePage == "Расходы" && (
            <OrderSegment title='Подача заявки на грант' subtitle='Расходы'>
              <HelperMessage>
                <span>
                  В данной вкладке необходимо отразить те необходимые ресурсы, которых нет ни у команды проекта, ни у партнеров, ни у спонсоров, т.е. запрашиваемую сумму проекта. Грант – это серьезное финансовое обязательство, которое имеет ряд ограничений, в частности, по допустимым направлениям расходов. <a href="">В Базу знаний за подробностями</a>
                </span>
              </HelperMessage>
              <Checkbox>Проживание и питание</Checkbox>
              <Checkbox>Транспортные расходы</Checkbox>
              <Checkbox>Аренда оборудования</Checkbox>
              <Checkbox>Аренда помещений</Checkbox>
              <Checkbox>Проживание и питание</Checkbox>
              <Checkbox>Проживание и питание</Checkbox>
            </OrderSegment>
          )}
          {activePage == "Общее" && (
              <FormSegment title='Подача заявки на грант'>
              <Input
              rules={{
                ...rules.required,
              }}
              name='second_name'
              control={control}
              label='Фамилия'
              type='text'/>

              <Input
              rules={{
                ...rules.required,
                ...rules.validateDate
              }}
              name='date'
              control={control}
              label='Дата рождения'
              type='date'/>

              <Input
              rules={{
                ...rules.required,
              }}
              name='first_name'
              control={control}
              label='Имя'
              type='text'/>

              <Input
              name='phone'
              control={control}
              label='Номер телефона'
              type='phone'/>

              <Input
              name='middle_name'
              control={control}
              description="При наличии"
              label='Отчество'
              type='text'/>
              <Flex flexDir="column" gap="1rem">
                <span style={{fontSize: ".9rem"}}>Пол</span>
                <RadioGroup onChange={(value) => console.log(value)}>
                  <Flex gap="1rem" direction='row'>
                    <Radio value='1' size='md'>
                      Женский
                    </Radio>
                    <Radio value='2' size='md'>
                      Мужской
                    </Radio>
                  </Flex>
                </RadioGroup>
              </Flex>
            </FormSegment>
          )}

        </div>
        <TileBlock style={{gridColumn: "1", gridRow: "2", height: "min-content"}}>
          <Helper onClick={(v) => {setactivePage(v); console.log(v)}} items={mockNewOrder.items} title={mockNewOrder.title} active={activePage}/>
        </TileBlock>
      </div>
    </>
  )
}

OrderPage.getLayout = function getLayout(page: ReactElement) {
  return (
    <Layout>
      {page}
    </Layout>
  )
}